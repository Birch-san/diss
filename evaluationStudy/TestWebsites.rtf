{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww5980\viewh11220\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 Websites under test\
\
We could tackle these, which are in evaluation criteria:\
(From initial state) Lookup time of arbitrary interface element\
\'95 (From some focused element) Lookup time of element distant in markup\
\'95 (From some focused element) Lookup time of spatially distant element\
\'95 (From some focused element) Lookup time of semantically related element; for example, the next element in a list\
\'95 (From some focused element) Lookup time of semantically unrelated element; for example, traveling from a navigation bar to a content item\
\
Or these, from requirements:\
\
R11 Efficient navigation (semantically unrelated elements)\
Navigation to elements that exist in separate visual containers to the currently focused element, should be possible in less than 4 keypresses.\
\
R12 Efficient navigation (semantically related, but distant elements)\
Navigation to elements that exist in the same visual container as the currently focused element, should be possible in less than 4 keypresses.\
\
R13 Efficient navigation (arbitrary position)\
Navigation to elements that exist in the same visual container as the currently focused element, should be possible in less than 4 lookups.\
http://www.amazon.co.uk/\
http://www.bbc.co.uk/\
\
And these, from anti-requirements:\
\
R14 Efficient navigation (semantically related, nearby elements)\
Navigation to elements that exist in the same visual container as the currently focused element, and are nearby: tabbing navigation already performs this very efficiently (albeit unpredictably). The more pressing concern is how to navigate between visual containers.\
http://www.youtube.com/\
\
R15 Navigation to off-screen elements\
In this pointing-based interface, it is assumed that the user will only ever be trying to navigate to elements that they can point at; thus off-screen elements need not be captured.\
\
\
\
Err\
\
random tasks\
\
\strike \strikec0 Navigate to search field on youtube\strike0\striked0 \
\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 Search \'91piano\'92 on YouTube\
	Select first result\
	Select \'91Favorite videos\'92\
\
Search \'91sport\'92 on BBC\
	Select first result\
NOTE: skiplinks do not work in Chrome! still!\
	\
Search \'91pillow\'92 on Amazon\
	Select first result\
\
View first article on Engadget.com\
\
Google \'91slam\'92\
	Select first result\
\
Select \'91Archives\'92 on Megatokyo\
\
Search \'91computer\'92 on Wikipedia\
	Select \'91Section 2.3: The modern computer\'92}